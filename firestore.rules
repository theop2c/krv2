rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // User profiles
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated();
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Files
    match /fichiers/{fileId} {
      allow read: if isAuthenticated() && (
        resource.data.utilisateurId == request.auth.uid || isAdmin()
      );
      allow create: if isAuthenticated() && 
        request.resource.data.utilisateurId == request.auth.uid;
      allow delete: if isAuthenticated() && (
        resource.data.utilisateurId == request.auth.uid || isAdmin()
      );
    }

    // Messages
    match /messages/{messageId} {
      allow read: if isAuthenticated() && 
        resource.data.utilisateurId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.utilisateurId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.utilisateurId == request.auth.uid;
    }

    // Matrices
    match /matrices/{matrixId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
    }

    // Analyses
    match /analyses/{analysisId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
    }

    // Stripe Integration
    match /customers/{uid} {
      allow read: if request.auth.uid == uid;

      match /checkout_sessions/{id} {
        allow read, write: if request.auth.uid == uid;
      }
      match /subscriptions/{id} {
        allow read: if request.auth.uid == uid;
      }
      match /payments/{id} {
        allow read: if request.auth.uid == uid;
      }
    }

    match /products/{id} {
      allow read: if true;

      match /prices/{id} {
        allow read: if true;
      }

      match /tax_rates/{id} {
        allow read: if true;
      }
    }
  }
}